---
# - name: Install Firewalld Service
#   ansible.builtin.package:
#     name: firewalld
#     state: present
#   register: firewalld_installed

# - name: Start Firewalld Service
#   ansible.builtin.service:
#     name: firewalld
#     state: started
#     enabled: yes
#   register: firewalld_started

# - name: Open http and https
#   ansible.builtin.command:
#     cmd: "{{ item }}"
#   loop:
#     - firewall-cmd --permanent --add-service=http
#     - firewall-cmd --permanent --add-service=https
#     - firewall-cmd --permanent --add-port={{ jenkins_port }}/tcp
#     - firewall-cmd --reload
#   when: firewalld_installed.changed

- name: Install Java {{ java_version }}
  ansible.builtin.package:
    name: "{{ java_package }}"
    state: present

- name: Configure Java alternatives
  ansible.builtin.alternatives:
    name: java
    path: "{{ java_bin_path }}"
    link: /usr/bin/java

- name: Add Jenkins Repository
  ansible.builtin.get_url:
    url: "{{ jenkins_repo_url }}"
    dest: /etc/yum.repos.d/jenkins.repo

- name: Import Jenkins Repository Key
  ansible.builtin.rpm_key:
    key: "{{ jenkins_repo_key }}"
    state: present

- name: Backup Existing Jenkins Configurations
  ansible.builtin.shell: cp -rp /var/lib/jenkins /var/lib/jenkins_{{ jenkins_version }}_{{ ansible_date_time.iso8601 | regex_replace(':', '-') }}
  register: jenkins_backup
  when: backup

- name: Install specific version of Jenkins
  ansible.builtin.package:
    name: "jenkins-{{ jenkins_version }}"
    state: present
  register: jenkins_installed

- name: Start and Enable Jenkins
  ansible.builtin.service:
    name: jenkins
    state: started
    enabled: yes

- name: Wait for Jenkins to start up
  ansible.builtin.wait_for:
    port: "{{ jenkins_port }}"
    delay: 20
    timeout: 300

- name: Check if initial password exists
  ansible.builtin.stat:
    path: /var/lib/jenkins/secrets/initialAdminPassword
  register: init_pass

- name: Get Jenkins initial admin password
  ansible.builtin.command: cat /var/lib/jenkins/secrets/initialAdminPassword
  register: jenkins_initial_password
  changed_when: false
  when: init_pass.stat.exists

- name: Display Jenkins initial admin password
  ansible.builtin.debug:
    var: jenkins_initial_password.stdout
  when: init_pass.stat.exists

- name: Wait for inital Jenkins Setup
  ansible.builtin.pause:
    prompt: "Please setup Jenkins and press Enter to continue"